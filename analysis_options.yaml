# analysis_options.yaml

# Start with recommended Flutter lints
include: package:flutter_lints/flutter.yaml

analyzer:
  # Strong mode settings
  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  
  # Error/warning configuration
  errors:
    # Treat all warnings as errors (comment out if too strict)
    # all: warning
    
    # Common strict rules
    deprecated_member_use: error
    invalid_override: error
    missing_required_param: error
    unnecessary_null_comparison: error
    use_build_context_synchronously: error
    
    # Documentation rules
    public_member_api_docs: warning
    annotate_overrides: warning
    
    # Null safety
    dead_code: warning
    unreachable_switch_case: warning
  
  # Language features
  language:
    strict-raw-types: true
    strict-inference: true
  
  # Exclude generated files
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/*.gen.dart"
    - "**/generated/**"
    - "**/build/**"
    - "**/.dart_tool/**"

linter:
  rules:
    # ----------- Code Quality -----------
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - avoid_empty_else
    - avoid_print
    - avoid_redundant_argument_values
    - avoid_relative_lib_imports
    - avoid_unused_constructor_parameters
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - constant_identifier_names
    - control_flow_in_finally
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - file_names
    - flutter_style_todos
    - hash_and_equals
    - invariant_booleans
    - join_return_with_assignment
    - library_names
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - null_closures
    - omit_local_variable_types
    - overridden_fields
    - package_api_docs
    - package_names
    - prefer_adjacent_string_join
    - prefer_collection_literals
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_initializing_formals
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_relative_imports
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - recursive_getters
    - slash_for_doc_comments
    - sort_child_properties_last
    - sort_constructors_first
    - sort_pub_dependencies
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_init_formals
    - unawaited_futures
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unnecessary_string_interpolations
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_build_context_synchronously
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - use_setters_to_change_properties
    - use_string_buffers
    - valid_regexps
    - void_checks

    # ----------- Flutter Specific -----------
    - avoid_redundant_argument_values
    - avoid_single_child_in_flex
    - avoid_unnecessary_containers
    - avoid_web_libraries_in_flutter
    - prefer_const_constructors_in_immutables
    - sized_box_for_whitespace
    - use_key_in_widget_constructors
    - use_named_constants